# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14wl9_tuP32u6TbO8O4wxfjsTtruAV-Se
"""

pip install pandas

import pandas as pd
import matplotlib.pyplot as plt

# Leer el archivo con separador de tabulación
datos = pd.read_csv("Raw Data2.csv", sep='\t')

# Verificar las primeras filas
print("Primeras filas del archivo:")
print(datos.head())

# Extraer columnas
tiempo = datos["Time (s)"]
acc_x = datos["Linear Acceleration x (m/s^2)"]
acc_y = datos["Linear Acceleration y (m/s^2)"]
acc_z = datos["Linear Acceleration z (m/s^2)"]
acc_abs = datos["Absolute acceleration (m/s^2)"]

# --- Gráfica 1: Aceleración X ---
plt.figure(figsize=(10, 4))
plt.plot(tiempo, acc_x, color='blue')
plt.title('Aceleración X vs Tiempo')
plt.xlabel('Tiempo (s)')
plt.ylabel('Aceleración X (m/s²)')
plt.grid(True)
plt.tight_layout()
plt.show()

# --- Gráfica 2: Aceleración Y ---
plt.figure(figsize=(10, 4))
plt.plot(tiempo, acc_y, color='green')
plt.title('Aceleración Y vs Tiempo')
plt.xlabel('Tiempo (s)')
plt.ylabel('Aceleración Y (m/s²)')
plt.grid(True)
plt.tight_layout()
plt.show()

# --- Gráfica 3: Aceleración Z ---
plt.figure(figsize=(10, 4))
plt.plot(tiempo, acc_z, color='red')
plt.title('Aceleración Z vs Tiempo')
plt.xlabel('Tiempo (s)')
plt.ylabel('Aceleración Z (m/s²)')
plt.grid(True)
plt.tight_layout()
plt.show()

plt.figure(figsize=(10, 4))
plt.plot(tiempo, acc_abs, color='purple')  # Línea continua por defecto
plt.title('Aceleración Absoluta vs Tiempo')
plt.xlabel('Tiempo (s)')
plt.ylabel('Aceleración Absoluta (m/s²)')
plt.grid(True)
plt.tight_layout()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

# Leer el archivo con separador de tabulación
datos = pd.read_csv("Raw Data3.csv", sep='\t')

# Extraer columnas
tiempo = datos["Time (s)"]
lux = datos["Illuminance (lx)"]

# Calcular máximos y mínimos
lux_max = lux.max()
lux_min = lux.min()
t_max = tiempo[lux.idxmax()]
t_min = tiempo[lux.idxmin()]

# --- Gráfica: Iluminancia vs Tiempo ---
plt.figure(figsize=(10, 4))
plt.plot(tiempo, lux, color='orange', label='Iluminancia')

# Marcar pico máximo
plt.plot(t_max, lux_max, 'ro', label=f'Máx: {lux_max:.1f} lx')
plt.annotate(f'Máx\n{lux_max:.1f} lx', xy=(t_max, lux_max),
             xytext=(t_max+0.5, lux_max+20),
             arrowprops=dict(facecolor='red', arrowstyle='->'))

# Marcar pico mínimo
plt.plot(t_min, lux_min, 'bo', label=f'Mín: {lux_min:.1f} lx')
plt.annotate(f'Mín\n{lux_min:.1f} lx', xy=(t_min, lux_min),
             xytext=(t_min+0.5, lux_min-20),
             arrowprops=dict(facecolor='blue', arrowstyle='->'))

# Ajustes de gráfico
plt.title('Iluminancia vs Tiempo')
plt.xlabel('Tiempo (s)')
plt.ylabel('Iluminancia (lx)')
plt.grid(True)
plt.legend()
plt.tight_layout()
plt.show()